{"version":3,"sources":["components/Card.js","components/Loading.js","components/Dashboard.js","components/Carousel.js","components/DetailCard.js","components/DetailFooter.js","components/Detail.js","components/NotFound.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["LaunchCard","props","launch","data","image","links","flickr_images","Col","xl","lg","md","sm","xs","Card","bg","text","className","Img","variant","src","Body","Title","flight_number","mission_name","ListGroup","ListGroupItem","launch_date_utc","substring","launch_site","site_name_long","rocket","rocket_name","rocket_type","Link","href","Loading","class","Spinner","animation","role","Dashboard","useState","setData","fetched","setFetched","useEffect","axios","then","response","status","reverse","console","log","Row","map","entry","index","key","ImageCarousel","Carousel","images","Item","alt","DetailCard","article","article_link","video","video_link","Table","style","textAlign","width","second_stage","payloads","payload","payload_id","payload_type","launch_success","color","Text","details","float","length","DetailFooter","Nav","prev","next","Detail","flightNumber","useParams","setLaunch","Number","NotFound","Header","Navbar","Math","floor","random","Footer","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8f9f4c3f.chunk.js","sourcesContent":["// jshint esversion:6\r\nimport React from \"react\";\r\nimport {Card, ListGroup, ListGroupItem, Col} from 'react-bootstrap';\r\n\r\nfunction LaunchCard(props){\r\n  const launch = props.data;\r\n  const image = launch.links.flickr_images[0];\r\n\r\n  return (<Col xl={3} lg={4} md={6} sm={6} xs={12}>\r\n    <Card bg=\"dark\" text=\"white\" className=\"dashboard-card\">\r\n  <Card.Img variant=\"top\" src={image} className=\"card-image\"/>\r\n  <Card.Body className=\"card-title-body\">\r\n    <Card.Title>{launch.flight_number}. {launch.mission_name}</Card.Title>\r\n      </Card.Body>\r\n  <ListGroup className=\"list-group-flush card-list\" >\r\n    <ListGroupItem >Launch date: {launch.launch_date_utc.substring(9,10)}/{launch.launch_date_utc.substring(6,7)}/{launch.launch_date_utc.substring(0,4)}</ListGroupItem>\r\n    <ListGroupItem >Launch site: {launch.launch_site.site_name_long}</ListGroupItem>\r\n    <ListGroupItem >Rocket: {launch.rocket.rocket_name}, type {launch.rocket.rocket_type}</ListGroupItem>\r\n  </ListGroup>\r\n  <Card.Body className=\"card-footer-body\">\r\n    <Card.Link className=\"card-footer-link\" href={\"/\"+launch.flight_number}>See details</Card.Link>\r\n  </Card.Body>\r\n\r\n</Card>\r\n</Col>)}\r\n\r\nexport default LaunchCard\r\n","// jshint esversion:6\r\nimport React from 'react';\r\nimport {Spinner} from 'react-bootstrap';\r\n\r\nexport default function Loading() {\r\n  return <div class=\"d-flex justify-content-center spinner-div\"><Spinner animation=\"border\" role=\"status\">\r\n  <span className=\"sr-only\">Loading...</span>\r\n</Spinner></div>}\r\n","// jshint esversion:6\r\nimport React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport LaunchCard from \"./Card\";\r\nimport Loading from \"./Loading\";\r\nimport {Row} from 'react-bootstrap';\r\n\r\n\r\nfunction Dashboard() {\r\n  const [data, setData] = useState([]);\r\n  const [fetched, setFetched] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    axios('https://api.spacexdata.com/v3/launches/past')\r\n      .then(\r\n        function(response) {\r\n\r\n          if (response.status !== 200) {\r\n            console.log('Looks like there was a problem. Status Code: ' +\r\n            response.status);\r\n          return;\r\n        }\r\n        setData(response.data.reverse());\r\n       setFetched(true);\r\n      });\r\n}, [fetched]);\r\nif(fetched){\r\n  return (<div>\r\n    <h1>SpaceX Launches</h1>\r\n    <Row>\r\n    {data.map((entry, index)=> <LaunchCard key={index} data={entry}/>)}\r\n    </Row>\r\n  </div>);\r\n} else {return <Loading />}\r\n}\r\n\r\nexport default Dashboard\r\n","// jshint esversion:6\r\nimport React from \"react\";\r\nimport Carousel from 'react-bootstrap/Carousel';\r\n\r\nfunction ImageCarousel(props){\r\n\r\nreturn (<Carousel className=\"image-carousel\">\r\n  {props.images.map(image => <Carousel.Item>\r\n    <img\r\n      className=\"d-block w-100 carousel-image\"\r\n      src={image}\r\n      alt=\"Carousel slide\"\r\n    />\r\n  </Carousel.Item>)}\r\n</Carousel>)\r\n}\r\n\r\nexport default ImageCarousel\r\n","// jshint esversion:6\r\nimport React from \"react\";\r\nimport ImageCarousel from \"./Carousel\";\r\nimport {Card, Row, Col, Table} from 'react-bootstrap';\r\n\r\nfunction DetailCard(props){\r\n\r\n  const launch = props.entry;\r\n  const article = launch.links.article_link;\r\n  const video = launch.links.video_link;\r\n  const images = launch.links.flickr_images;\r\n\r\n return (<Row>\r\n <Col xl={8} lg={8} md={8} sm={12} xs={12} className=\"detail-card-col\">\r\n   <Card bg=\"dark\" text=\"white\" className=\"detail-card\">\r\n <Card.Body className=\"title-wrapper\">\r\n <Card.Title>{launch.flight_number}. {launch.mission_name}</Card.Title>\r\n   </Card.Body>\r\n <Table variant=\"dark\">\r\n <tbody>\r\n <tr>\r\n <td style={{textAlign: \"right\", width: \"25%\"}}>Launch date: </td>\r\n <td>{launch.launch_date_utc.substring(9,10)}/{launch.launch_date_utc.substring(6,7)}/{launch.launch_date_utc.substring(0,4)}</td>\r\n </tr>\r\n <tr>\r\n <td style={{textAlign: \"right\"}}>Launch site: </td>\r\n <td>{launch.launch_site.site_name_long}</td>\r\n </tr>\r\n <tr>\r\n <td style={{textAlign: \"right\"}}>Rocket: </td>\r\n <td>{launch.rocket.rocket_name}, type {launch.rocket.rocket_type}</td>\r\n </tr>\r\n <tr>\r\n <td style={{textAlign: \"right\"}}>Payload: </td>\r\n <td>{launch.rocket.second_stage.payloads.map(function(payload){return payload.payload_id+ \" \"+ payload.payload_type})}</td>\r\n </tr>\r\n <tr>\r\n <td style={{textAlign: \"right\"}}>Success: </td>\r\n <td>{launch.launch_success ?\r\n   <div style={{color:\"#5cb85c\"}}>Launch was successful.</div>:\r\n   <div style={{color:\"#d9534f\"}}>Launch failed.</div>}</td>\r\n </tr>\r\n </tbody>\r\n </Table>\r\n   <Card.Body>\r\n <Card.Text>\r\n <p>{launch.details}</p>\r\n <div>\r\n <Card.Link style={{float:\"left\"}} href={article}>Article</Card.Link>\r\n  <Card.Link style={{float:\"right\"}} href={video}>Video</Card.Link>\r\n</div>\r\n </Card.Text>\r\n\r\n</Card.Body>\r\n </Card>\r\n </Col>\r\n<Col xl={4} lg={4} md={12} sm={12} xs={12} className=\"carousel-col\">\r\n{images.length>0 && <ImageCarousel images={images}/>}\r\n</Col>\r\n</Row>)\r\n}\r\n\r\nexport default DetailCard;\r\n","// jshint esversion:6\r\nimport React from \"react\";\r\nimport {Nav} from 'react-bootstrap';\r\n\r\nfunction DetailFooter(props){\r\nreturn <Nav className=\"justify-content-center\">\r\n    <Nav.Item>\r\n      <Nav.Link href={\"/spacex/\"+props.prev} className=\"detail-footer-link\">Previous</Nav.Link>\r\n    </Nav.Item>\r\n    <Nav.Item>\r\n      <Nav.Link href={\"/spacex/\"+props.next} className=\"detail-footer-link\">Next</Nav.Link>\r\n    </Nav.Item>\r\n  </Nav>\r\n}\r\n\r\nexport default DetailFooter\r\n","// jshint esversion:6\r\nimport React, {useState, useEffect} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport DetailCard from \"./DetailCard\";\r\nimport DetailFooter from \"./DetailFooter\";\r\nimport Loading from \"./Loading\";\r\n\r\nfunction Detail(){\r\n\r\n  const flightNumber = useParams().flightNumber;\r\n  const [launch, setLaunch] = useState({});\r\n  const [fetched, setFetched] = useState(false);\r\n\r\n   useEffect(()=>{\r\n     axios('https://api.spacexdata.com/v3/launches/'+flightNumber)\r\n       .then(\r\n         function(response) {\r\n\r\n           if (response.status !== 200) {\r\n             console.log('Looks like there was a problem. Status Code: ' +\r\n             response.status);\r\n           return;\r\n         }\r\n         setLaunch(response.data);\r\n        setFetched(true);\r\n       });\r\n }, [flightNumber, fetched]);\r\nif(fetched){\r\n  return (<div className=\"detail-container\">\r\n              <DetailCard entry={launch}/>\r\n              <DetailFooter prev={(Number(flightNumber)-1)} next={(Number(flightNumber)+1)}/>\r\n            </div>)\r\n        } else { return <Loading/>}\r\n}\r\n\r\nexport default Detail;\r\n","// jshint esversion:6\r\nimport React from 'react';\r\n\r\nexport default function NotFound() {\r\n  return  <h1>Not found</h1>}\r\n","// jshint esversion:6\r\nimport React from \"react\";\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\n\r\nfunction Header(){\r\n  return <Navbar bg=\"dark\" variant=\"dark\">\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link href=\"/spacex\">Home</Nav.Link>\r\n      <Nav.Link href=\"/spacex/90\">Latest</Nav.Link>\r\n      <Nav.Link href=\"/spacex/55\">Tesla</Nav.Link>\r\n      <Nav.Link href={\"/spacex/\"+ (Math.floor(90*Math.random())+1)}>Random</Nav.Link>\r\n      </Nav>\r\n  </Navbar>\r\n}\r\n\r\nexport default Header\r\n      // <Nav.Link href=\"/upcoming\">Upcoming</Nav.Link>\r\n","// jshint esversion:6\r\nimport React from \"react\";\r\n\r\nfunction Footer(){\r\nreturn null\r\n}\r\n\r\nexport default Footer\r\n","// jshint esversion:6\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './App.css';\nimport Dashboard from \"./components/Dashboard\";\nimport Detail from \"./components/Detail\";\nimport NotFound from \"./components/NotFound\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n\n  return (\n    <div>\n    <Header />\n    <Router>\n    <div>\n  <Switch>\n  <Route exact path=\"/spacex\" component={Dashboard}/>\n  <Route path=\"/spacex/:flightNumber\">\n    <Detail />\n  </Route>\n  <Route component={NotFound} />\n  </Switch>\n  </div>\n  </Router>\n  <Footer />\n  </div>\n);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}